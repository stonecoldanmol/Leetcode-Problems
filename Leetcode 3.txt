/*
3. Longest Substring Without Repeating Characters

Given a string, find the length of the longest substring without repeating characters.

Example 1:

Input: "abcabcbb"
Output: 3 
Explanation: The answer is "abc", with the length of 3. 
Example 2:

Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3. 

Note that the answer must be a substring, "pwke" is a subsequence and not a substring.
*/


int isInclude(char *s,char a)
{
    while(*s!='\0')
    {
        if(*s==a)
        {
            return 1;
        }
        s++;
    }
    return 0;
}


void clear(char *s)
{
    while(*s!='\0')
    {
        *s='\0';
        s++;
    }
}

int lengthOfLongestSubstring(char * s)
{
    int i=0;
    int max=0,index=0;
    
    char p[strlen(s)>0?strlen(s)+1:1];
    
    while(s[i]!='\0')
    {
        if(!isInclude(p,s[i+index]))
        {
            p[index]=s[i+index];
            p[index+1]='\0';
            index++;
            
            if(index>=max)
            {
                max=index;
            }
            if(s[index+i]=='\0')
            {
                break;
            }
        }
        else
        {
            index=0;
            clear(p);
            i++;
        }
        
        
    }
    
    return max;
}

